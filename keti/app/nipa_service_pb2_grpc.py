# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import nipa_service_pb2 as nipa__service__pb2


class StreamingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ImageStreaming = channel.stream_stream(
                '/nipa_demo.StreamingService/ImageStreaming',
                request_serializer=nipa__service__pb2.ImgRequest.SerializeToString,
                response_deserializer=nipa__service__pb2.Response.FromString,
                )
        self.Chat = channel.unary_unary(
                '/nipa_demo.StreamingService/Chat',
                request_serializer=nipa__service__pb2.ChatRequest.SerializeToString,
                response_deserializer=nipa__service__pb2.Response.FromString,
                )
        self.GetUserList = channel.unary_unary(
                '/nipa_demo.StreamingService/GetUserList',
                request_serializer=nipa__service__pb2.DummyRequest.SerializeToString,
                response_deserializer=nipa__service__pb2.Response.FromString,
                )
        self.GetUserData = channel.unary_unary(
                '/nipa_demo.StreamingService/GetUserData',
                request_serializer=nipa__service__pb2.User.SerializeToString,
                response_deserializer=nipa__service__pb2.Response.FromString,
                )
        self.GetUserHistory = channel.unary_unary(
                '/nipa_demo.StreamingService/GetUserHistory',
                request_serializer=nipa__service__pb2.User.SerializeToString,
                response_deserializer=nipa__service__pb2.Response.FromString,
                )


class StreamingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ImageStreaming(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StreamingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ImageStreaming': grpc.stream_stream_rpc_method_handler(
                    servicer.ImageStreaming,
                    request_deserializer=nipa__service__pb2.ImgRequest.FromString,
                    response_serializer=nipa__service__pb2.Response.SerializeToString,
            ),
            'Chat': grpc.unary_unary_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=nipa__service__pb2.ChatRequest.FromString,
                    response_serializer=nipa__service__pb2.Response.SerializeToString,
            ),
            'GetUserList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserList,
                    request_deserializer=nipa__service__pb2.DummyRequest.FromString,
                    response_serializer=nipa__service__pb2.Response.SerializeToString,
            ),
            'GetUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserData,
                    request_deserializer=nipa__service__pb2.User.FromString,
                    response_serializer=nipa__service__pb2.Response.SerializeToString,
            ),
            'GetUserHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserHistory,
                    request_deserializer=nipa__service__pb2.User.FromString,
                    response_serializer=nipa__service__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nipa_demo.StreamingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StreamingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ImageStreaming(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/nipa_demo.StreamingService/ImageStreaming',
            nipa__service__pb2.ImgRequest.SerializeToString,
            nipa__service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Chat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nipa_demo.StreamingService/Chat',
            nipa__service__pb2.ChatRequest.SerializeToString,
            nipa__service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nipa_demo.StreamingService/GetUserList',
            nipa__service__pb2.DummyRequest.SerializeToString,
            nipa__service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nipa_demo.StreamingService/GetUserData',
            nipa__service__pb2.User.SerializeToString,
            nipa__service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nipa_demo.StreamingService/GetUserHistory',
            nipa__service__pb2.User.SerializeToString,
            nipa__service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
